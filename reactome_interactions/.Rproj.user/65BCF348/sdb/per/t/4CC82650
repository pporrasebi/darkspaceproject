{
    "collab_server" : "",
    "contents" : "---\ntitle: Reactome dataset generation\ndate: 2016-04-13\nauthor: Pablo Porras\n---\n```{r set-options, echo=FALSE}\noptions(width = 80)\n```\nGeneration of the Reactome dataset: Technical report\n========================================================\n\n### Synopsis\n\nThe goal of this analysis is to use Reactome to try to find potentially non-curated protein interactions for which there is experimental evidence. I define a set of associated pairs as found in Reactome. Those proteins that are found to be present in the same reaction are combined according to their role.  \n\n### Part 1: Loading Reactome data\n\nThe files used for this analysis were supplied by Antonio Fabregat at Reactome around end of June, 2015. I cannot use the interactions as exported by Reactome since they do not give a PMID for each inferred interacting pair and are then not usable. As a pre-load operation, I clean up the UniProtKB accessions given by Reactome to avoid using isoform identifiers. \n\n```{r eval=T,message=FALSE,warning=FALSE}\nsystem(\"perl ./scripts/reactome_prot_cleaner.pl ./source_files/rr.proteins.txt ./processed_files/rr.proteins.clean.txt\")\nrr_prots <- read.delim(\"./processed_files/rr.proteins.clean.txt\", header = F, sep = \"\\t\", colClasses = \"character\")\nsystem(\"rm ./processed_files/rr.proteins.clean.txt\")\ncolnames(rr_prots) <- c(\"upac\",\"upac_clean\",\"type\", \"rr_id\")\nlibrary(dplyr)\n\nrr_prots <- unique(select(rr_prots,upac=upac_clean,rr_id,type))\n\nrr_pmids <- read.delim(\"./source_files/rr.pubmed.txt\", header = F, sep = \"\\t\", colClasses = \"character\")\ncolnames(rr_pmids) <- c(\"rr_id\", \"pmid\")\n\nrr_upacs <- unique(data.frame(rr_prots$upac))\n```\n```{r eval=FALSE}\nwrite.table(rr_upacs, \"./processed_files/rr.upacs.txt\", quote = F, row.names = F, col.names = F)\n```\n\n### Part 2: Select only human proteins\n\nI need to query uniprot via a script as defined on their webpage (see [here](http://www.uniprot.org/help/programmatic_access#batch_retrieval_of_entries)), in order to get the taxIDs of the different organisms represented in the dataset. I will restrict the search to human interactions, so it is required to limit the search to those. \n\n```{r eval=FALSE}\nsystem(\"perl ./scripts/up_batch_retr.pl ./processed_files/rr.upacs.txt > ./processed_files/rr.up_taxid.txt\")     # This takes a LONG time, do not run unless 100% needed. \n```\n\nThe previous script takes a long time and cannot actually deal with isoforms, so I manually perform the query on the UniProtKB website using the retrieve/ID mapping tool. This allows for isoform mapping, but I also need to clean the results up so each UniProtKB accession is listed in a single line. \n\n```{r eval=FALSE}\nsystem(\"perl ./scripts/multiplier.pl ./processed_files/rr.up_taxid_man.txt ./processed_files/rr.up_taxid_clean.txt\")\n```\n```{r }\nrr_up_taxid <- read.delim(\"./processed_files/rr.up_taxid_clean.txt\", header = T, sep = \"\\t\", colClasses = \"character\")\n```\n\nAnd I select human proteins only, which I use to select only those reactions involving human proteins from the original list. \n\n```{r eval=TRUE}\nrr_up_human <- data.frame(rr_up_taxid[rr_up_taxid$Organism.ID == 9606,1])\ncolnames(rr_up_human) <- c(\"upac\")\n\nrr_prots_human <- unique(merge(rr_up_human, rr_prots, by = \"upac\", all.x=T, all.y=F))\n\nrr_reacts_human <- unique(data.frame(rr_prots_human$rr_id))\ncolnames(rr_reacts_human) <- \"rr_id\"\n\nrr_pmids_human <- unique(merge(rr_reacts_human, rr_pmids, by=\"rr_id\", all=F))\n\nreact_pmids_human <- unique(subset(rr_pmids_human, !is.na(rr_pmids_human$pmid), select = \"pmid\"))\nreact_pmids_human$reactome <- \"yes\"\n```\n\n### Part 3: Generate Reactome association pairs\n\nFirst I classify the human proteins in reactome using their types, in order to construct pairs to compare to intact interactions. I consider only the role types 'INPUT', 'OUTPUT' and 'CATALYST'. \n\n\n```{r eval=TRUE}\nrr_p_h_input <- data.frame(rr_prots_human[rr_prots_human$type == \"input\",c(1,3)])\nrr_p_h_output <- data.frame(rr_prots_human[rr_prots_human$type == \"output\",c(1,3)])\nrr_p_h_catalyst <- data.frame(rr_prots_human[rr_prots_human$type == \"catalystActivity\",c(1,3)])\n```\n\nI generate the pairs of potential interactions, following these rules:\n\n  *in-out pairs: proteins in a pair are annotated as 'INPUT' and 'OUTPUT' of a reaction, respectively.   \n  *in-cat pairs: proteins annotated as 'INPUT' and 'CATALYST' in a reaction.  \n  *out-cat pairs: proteins annotated as 'OUTPUT' and 'CATALYST' in a reaction.  \n\n```{r eval=TRUE}\nrr_pair_inout <- unique(merge(rr_p_h_input, rr_p_h_output, by=\"rr_id\", all=F))\nrr_pair_incat <- unique(merge(rr_p_h_input, rr_p_h_catalyst, by=\"rr_id\", all=F))\nrr_pair_outcat <- unique(merge(rr_p_h_output, rr_p_h_catalyst, by=\"rr_id\", all=F))\n\nrr_pairs_1 <- unique(rbind(rr_pair_inout, rr_pair_incat))\nrr_pairs <- unique(rbind(rr_pairs_1, rr_pair_outcat))\n```\n\nI finally add the PMID information to each pair of associations and I check if there are reactions for which no PMID is available. \n\n```{r }\nrr_pairs_pmid_all <- unique(merge(rr_pairs, rr_pmids_human, by=\"rr_id\",all=F))\n```\n\n### Part 4: Final formatting steps for generation of the Reactome dataset\n\nI generate a unique pair identifier per line and save the Reactome pairs associated with the PMIDs as a text file for further comparison with other datasets.\n\n```{r message=FALSE,warning=FALSE}\nlibrary(dplyr)\n\nrr_pairs_pmid_all$pair_id <- apply(rr_pairs_pmid_all[,2:3], 1,function(i){\n  paste(sort(i),collapse = \"_\")\n})\nreactome_pairs_pmid <- unique(select(rr_pairs_pmid_all, pair_id, pmid))\nreactome_pairs_pmid$reactome <- 1\nwrite.table(reactome_pairs_pmid,\"./results/pairs_pmid_reactome.txt\",col.names=T,row.names=F,quote=F,sep=\"\\t\")\nsystem(\"gzip ./results/pairs_pmid_reactome.txt\")\n```\n\nAfter collapsing redundant pairs, I end up with a list of `r nrow(reactome_pairs_pmid)` unique protein pair-publication associations extracted from Reactome in human. ",
    "created" : 1460630740700.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "3554596841",
    "id" : "4CC82650",
    "lastKnownWriteTime" : 1481821147,
    "last_content_update" : 1481821147786,
    "path" : "~/Documents/Projects/darkspaceproject/reactome_interactions/reactome_vs_imex_lean.Rmd",
    "project_path" : "reactome_vs_imex_lean.Rmd",
    "properties" : {
    },
    "relative_order" : 0,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_markdown"
}