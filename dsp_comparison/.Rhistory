View(test_data_check)
test_data_check <- mutate(test_data,
missing_prot =
ifelse(
any(prots %in% noimex_upnoisof$V1),
1,
0
))
View(noimex_upnoisof)
test_line <- data.frame(pair_id = as.character("A0A023HHK9_Q5S007"),
pmid = as.character("pmid_test"),
imex = as.numeric(2),
reactome = as.numeric(2),
tm_epmc = as.numeric(2),
iid_pred = as.numeric(2),
stringsAsFactors = F)
test_line <- mutate(test_line,prots = strsplit(pair_id,"_"))
test_data <- rbind(test_chunk,test_line)
test_data_check <- mutate(test_data,
missing_prot =
ifelse(
any(prots %in% noimex_upnoisof$V1),
1,
0
))
test_data_check <- mutate(test_data,
missing_prot =
ifelse(
length(intersect(prots,noimex_upnoisof$V1))>0,
1,
0
))
intersect(test_line$prots[1],noimex_upnoisof$V1)
intersect(test_line$prots,noimex_upnoisof$V1)
test_line$prots
intersect(test_line$prots[[1]],noimex_upnoisof$V1)
test_data_check <- mutate(test_data,
missing_prot =
ifelse(
length(intersect(prots[[1]],noimex_upnoisof$V1))>0,
1,
0
))
length(intersect(test_line$prots[[1]],noimex_upnoisof$V1))
length(intersect(test_line$prots[[1]],noimex_upnoisof$V1))>0
length(intersect(test_line$prots[[2]],noimex_upnoisof$V1))>0
length(intersect(test_chunk$prots[[1]],noimex_upnoisof$V1))>0
test_chunk$prots[[1]]
test_chunk$prots
test_data_check <- mutate(test_data,
missing_prot =
ifelse(
length(intersect(prots[1],noimex_upnoisof$V1))>0,
1,
0
))
test_chunk$prots[1]
test_chunk$prots
any(test_chunk$prots %in% noimex_upnoisof$V1)
any(test_line$prots %in% noimex_upnoisof$V1)
library(splitstackshape)
pubpaircomp_table_check_pt1 <- cSplit(pubpaircomp_table_final, "pair_id", sep = "_", direction = "long")
View(pubpaircomp_table_check_pt1)
pubpaircomp_table_check_pt1 <- cSplit(pubpaircomp_table_prots, "prots", sep = ",", direction = "long")
View(head(pubpaircomp_table_check_pt1))
pubpaircomp_table_prots <- pubpaircomp_table_final$pair_id
pubpaircomp_table_check_pt1 <- cSplit(pubpaircomp_table_prots, "prots", sep = ",", direction = "long")
pubpaircomp_table_prots <- pubpaircomp_table_final
pubpaircomp_table_prots$prots <- pubpaircomp_table_final$pair_id
pubpaircomp_table_check_pt1 <- cSplit(pubpaircomp_table_prots, "prots", sep = ",", direction = "long")
pubpaircomp_table_check_pt2 <- mutate(pubpaircomp_table_check_pt1,
missing_prot =
ifelse(
prots %in% noimex_upnoisof$V1,
1,
0))
View(head(pubpaircomp_table_check_pt2))
test_line <- data.frame(pair_id = as.character("A0A023HHK9_Q5S007"),
pmid = as.character("pmid_test"),
imex = as.numeric(2),
reactome = as.numeric(2),
tm_epmc = as.numeric(2),
iid_pred = as.numeric(2),
stringsAsFactors = F)
test_line$prots <- test_line$pair_id
test_data <- rbind(test_chunk,test_line)
test_data_check_pt1 <- cSplit(test_data, "prots", sep = ",", direction = "long")
test_data_check_pt2 <- mutate(test_data_pt1,
missing_prot =
ifelse(
prots %in% noimex_upnoisof$V1,
1,
0
))
test_data_check_pt1 <- cSplit(test_data, "prots", sep = ",", direction = "long")
test_data_check_pt2 <- mutate(test_data_pt1,
missing_prot =
ifelse(
prots %in% noimex_upnoisof$V1,
1,
0
))
test_data_check_pt2 <- mutate(test_data_check_pt1,
missing_prot =
ifelse(
prots %in% noimex_upnoisof$V1,
1,
0
))
View(test_data_check_pt2)
pubpaircomp_table_prots <- pubpaircomp_table_final
pubpaircomp_table_prots$prots <- pubpaircomp_table_final$pair_id
pubpaircomp_table_check_pt1 <- cSplit(pubpaircomp_table_prots, "prots", sep = "_", direction = "long")
test_line <- data.frame(pair_id = as.character("A0A023HHK9_Q5S007"),
pmid = as.character("pmid_test"),
imex = as.numeric(2),
reactome = as.numeric(2),
tm_epmc = as.numeric(2),
iid_pred = as.numeric(2),
stringsAsFactors = F)
test_line$prots <- test_line$pair_id
test_chunk <- pubpaircomp_table_prots[sample(1:nrow(pubpaircomp_table_prots),6),]
test_data <- rbind(test_chunk,test_line)
test_data_check_pt1 <- cSplit(test_data, "prots", sep = "_", direction = "long")
test_data_check_pt2 <- mutate(test_data_check_pt1,
missing_prot =
ifelse(
prots %in% noimex_upnoisof$V1,
1,
0
))
pubpaircomp_table_check_pt2 <- mutate(pubpaircomp_table_check_pt1,
missing_prot =
ifelse(
prots %in% noimex_upnoisof$V1,
1,
0))
table(pubpaircomp_table_check_pt2$missing_prot)
pubpaircomp_noncur_prots <- unique(subset(pubpaircomp_table_check_pt2,missing_prot==1,select("pair_id","missing_prot")))
pubpaircomp_noncur_pairs <- unique(subset(pubpaircomp_table_check_pt2,missing_prot==1,select= c("pair_id","missing_prot")))
View(pubpaircomp_noncur_pairs)
pubpaircomp_table_check_pt2 <- mutate(pubpaircomp_table_check_pt1,
noncur_prot =
ifelse(
prots %in% noimex_upnoisof$V1,
1,
0))
pubpaircomp_noncur_pairs <- unique(subset(pubpaircomp_table_check_pt2,noncur_prot==1,select= c("pair_id","noncur_prot")))
pubpaircomp_table_check_pt1 <- pubpaircomp_table_final
pubpaircomp_table_check_pt1$prots <- pubpaircomp_table_final$pair_id
pubpaircomp_table_check_pt2 <- cSplit(pubpaircomp_table_check_pt1, "prots", sep = "_", direction = "long")
pubpaircomp_table_check_pt3 <- mutate(pubpaircomp_table_check_pt2,
noncur_prot =
ifelse(
prots %in% noimex_upnoisof$V1,
1,
0))
pubpaircomp_noncur_pairs <- unique(subset(pubpaircomp_table_check_pt3,noncur_prot==1,select= c("pair_id","noncur_prot")))
pubpaircomp_table_form <- pubpaircomp_table
pubpaircomp_table_form[is.na(pubpaircomp_table_form <- pubpaircomp_table)] <- 0
pubpaircomp_table_check_pt4 <- unique(merge(pubpaircomp_table_form,pubpaircomp_noncur_pairs,by="pair_id",all.x = T,all.y = F))
pubpaircomp_table_final <- pubpaircomp_table_check_pt4
pubpaircomp_table_final[is.na(pubpaircomp_table_final <- pubpaircomp_table_check_pt4)] <- 0
View(pubpaircomp_table_final)
write.table(pubpaircomp_table_final,"./results/pubpaircomp_table_final.txt",col.names=T,row.names=F,sep="\t",quote=F)
system("tar -czvf ./results/pubpaircomp_table_final.txt.tar.gz ./results/pubpaircomp_table_final.txt")
system("tar -czvf ./results/pubpaircomp_table_final.txt.tar.gz /results/pubpaircomp_table_final.txt")
setwd("./results")
system("tar -czvf pubpaircomp_table_final.txt.tar.gz pubpaircomp_table_final.txt")
system("tar -czvf pubpaircomp_table_final.txt.tar.gz pubpaircomp_table_final.txt --remove-files")
system("tar -czvf pubpaircomp_table_final.txt.tar.gz pubpaircomp_table_final.txt && rm pubpaircomp_table_final.txt")
setwd("../")
upset(pubpaircomp_table_final,
nsets = 5,
point.size = 6,
line.size = 2,
mainbar.y.label = "Common pair/publication combos",
sets.x.label = "Nr of pair/publication combos in dataset",
order.by="freq",
decreasing=FALSE)
lhf <- unique(subset(pubpaircomp_table_final,
imex == 0 &
reactome == 1 &
tm_epmc == 1 &
iid_pred == 1))
View(lhf)
write.table(lhf,"./results/lhf_list.txt",col.names=T,row.names = F,sep="\t",quote=F)
lhf <- arrange(lhf,desc(noncur_prot),desc(pmid))
write.table(lhf,"./results/lhf_list.txt",col.names=T,row.names = F,sep="\t",quote=F)
knitr::purl("dsp_comparison.Rmd",output="dsp_comparison.R")
## ----set-options, echo=FALSE---------------------------------------------
options(width = 80)
## ----libraries,message=FALSE,warning=FALSE-------------------------------
library(dplyr)
library(data.table)
library(UpSetR)
library(splitstackshape)
## ----warning=FALSE,message=FALSE-----------------------------------------
imex_full <- fread("../IMEx/results/imex_full.txt", header=T, sep="\t",colClasses="character",data.table = F)
imex_human <- unique(subset(imex_full,taxid_a=="9606" & taxid_b=="9606"))
imex_human$imex <- 1
imex_human_sel <- unique(select(imex_human,pair_id=pair_id_clean,pmid=pubid,imex))
imex_pairs <- unique(select(imex_human,pair_id=pair_id_clean,imex))
imex_pmids <- unique(select(imex_human,pmid=pubid,imex))
## ------------------------------------------------------------------------
setwd("../reactome_interactions/results/")
system("gunzip -k pairs_pmid_reactome.txt.gz")
reactome_pairs_pmids <- fread("pairs_pmid_reactome.txt",header=T,sep="\t",colClasses=c("character","character","numeric"),data.table = F)
system("rm pairs_pmid_reactome.txt")
setwd("../../dsp_comparison/")
reactome_pairs <- unique(select(reactome_pairs_pmids,pair_id,reactome))
reactome_pmids <- unique(select(reactome_pairs_pmids,pmid,reactome))
## ------------------------------------------------------------------------
setwd("../epmc_text_mining/results/")
system("gunzip -k pairs_pmids_tm.txt.gz")
tm_pairs_pmids <- fread("pairs_pmids_tm.txt",header=T,sep="\t",colClasses=c("character","character","numeric"),data.table = F)
system("rm pairs_pmids_tm.txt")
setwd("../../dsp_comparison/")
tm_pairs_pmids_sel <- unique(select(tm_pairs_pmids,pair_id,pmid,tm_epmc=tm))
tm_pairs <- unique(select(tm_pairs_pmids,pair_id,tm_epmc=tm))
tm_pmids <- unique(select(tm_pairs_pmids,pmid,tm_epmc=tm))
## ------------------------------------------------------------------------
iid_pred_pairs <- fread("../iid_predictions/results/pairs_iid_pred.txt",header=T,sep="\t",colClasses=c("character","numeric"),data.table=F)
## ------------------------------------------------------------------------
all_df <- list(imex_pairs,reactome_pairs,tm_pairs,iid_pred_pairs)
comp_table <- Reduce(function(...) merge(..., all=TRUE), all_df)
# I clean and replace all NAs if present.
comp_table_final <- comp_table
comp_table_final[is.na(comp_table_final <- comp_table)] <- 0
write.table(comp_table_final,"./results/comp_table_final.txt",col.names=T,row.names=F,sep="\t",quote=F)
system("gzip ./results/comp_table_final.txt")
## ----echo=FALSE, fig.width=10,fig.height=6-------------------------------
upset(comp_table_final,
nsets = 4,
point.size = 6,
line.size = 2,
mainbar.y.label = "Common protein pairs",
sets.x.label = "Nr of protein pairs in dataset",
order.by="freq",
decreasing=FALSE,
queries = list(
list(query = intersects, params = list("reactome","iid_pred","tm_epmc"), color = "blue", active = T),
list(query = intersects, params = list("iid_pred","tm_epmc"), color= "cornflowerblue",active = T),
list(query = intersects, params = list("reactome","iid_pred"), color= "cornflowerblue",active = T),
list(query = intersects, params = list("reactome","tm_epmc"), color= "cornflowerblue",active = T),
list(query = intersects, params = list("imex","iid_pred","reactome","tm_epmc"), color= "darkorange2",active = T),
list(query = intersects, params = list("imex","reactome","tm_epmc"), color= "orange1",active = T),
list(query = intersects, params = list("imex","iid_pred","tm_epmc"), color= "orange1",active = T),
list(query = intersects, params = list("imex","iid_pred","reactome"), color= "orange1",active = T),
list(query = intersects, params = list("imex","iid_pred"), color= "lightgoldenrod2",active = T),
list(query = intersects, params = list("imex","reactome"), color= "lightgoldenrod2",active = T),
list(query = intersects, params = list("imex","tm_epmc"), color= "lightgoldenrod2",active = T),
list(query = intersects, params = list("imex"), color= "gray70",active = T),
list(query = intersects, params = list("reactome"), color= "gray70",active = T),
list(query = intersects, params = list("iid_pred"), color= "gray70",active = T),
list(query = intersects, params = list("tm_epmc"), color= "gray70",active = T)))
## ----echo=FALSE,fig.width=10,fig.height=6--------------------------------
upset(comp_table_final,
nsets = 4,
point.size = 6,
line.size = 2,
mainbar.y.label = "Common protein pairs",
sets.x.label = "Nr of protein pairs in dataset",
order.by="freq",
decreasing=FALSE,
queries = list(
list(query = intersects, params = list("reactome","iid_pred","tm_epmc"), color = "blue", active = T),
list(query = intersects, params = list("iid_pred","tm_epmc"), color= "cornflowerblue",active = T),
list(query = intersects, params = list("reactome","iid_pred"), color= "cornflowerblue",active = T),
list(query = intersects, params = list("reactome","tm_epmc"), color= "cornflowerblue",active = T),
list(query = intersects, params = list("imex","iid_pred","reactome","tm_epmc"), color= "darkorange2",active = T),
list(query = intersects, params = list("imex","reactome","tm_epmc"), color= "orange1",active = T),
list(query = intersects, params = list("imex","iid_pred","tm_epmc"), color= "orange1",active = T),
list(query = intersects, params = list("imex","iid_pred","reactome"), color= "orange1",active = T),
list(query = intersects, params = list("imex","iid_pred"), color= "lightgoldenrod2",active = T),
list(query = intersects, params = list("imex","reactome"), color= "lightgoldenrod2",active = T),
list(query = intersects, params = list("imex","tm_epmc"), color= "lightgoldenrod2",active = T)),
intersections = list(
list("reactome","iid_pred","tm_epmc"),
list("iid_pred","tm_epmc"),
list("reactome","iid_pred"),
list("reactome","tm_epmc"),
list("imex","iid_pred","reactome","tm_epmc"),
list("imex","reactome","tm_epmc"),
list("imex","iid_pred","tm_epmc"),
list("imex","iid_pred","reactome"),
list("imex","iid_pred"),
list("imex","reactome"),
list("imex","tm_epmc")))
## ------------------------------------------------------------------------
allpub_df <- list(imex_pmids,reactome_pmids,tm_pmids)
pubcomp_table <- Reduce(function(...) merge(..., all=TRUE), allpub_df)
# I clean and replace all NAs if present.
pubcomp_table_final <- pubcomp_table
pubcomp_table_final[is.na(pubcomp_table_final <- pubcomp_table)] <- 0
write.table(pubcomp_table_final,"./results/pubcomp_table_final.txt",col.names=T,row.names=F,sep="\t",quote=F)
system("gzip ./results/pubcomp_table_final.txt")
## ----echo=FALSE, fig.width=10,fig.height=6-------------------------------
upset(pubcomp_table_final,
nsets = 3,
point.size = 6,
line.size = 2,
mainbar.y.label = "Common publications",
sets.x.label = "Nr of publications in dataset",
order.by="freq",
decreasing=FALSE,
queries = list(
list(query = intersects, params = list("reactome","tm_epmc"), color = "blue", active = T),
list(query = intersects, params = list("imex","reactome","tm_epmc"), color= "darkorange2",active = T),
list(query = intersects, params = list("imex","reactome"), color= "lightgoldenrod2",active = T),
list(query = intersects, params = list("imex","tm_epmc"), color= "lightgoldenrod2",active = T),
list(query = intersects, params = list("imex"), color= "gray70",active = T),
list(query = intersects, params = list("reactome"), color= "gray70",active = T),
list(query = intersects, params = list("tm_epmc"), color= "gray70",active = T)))
## ----echo=FALSE, fig.width=10,fig.height=6-------------------------------
upset(pubcomp_table_final,
nsets = 3,
point.size = 6,
line.size = 2,
mainbar.y.label = "Common protein pairs",
sets.x.label = "Nr of protein pairs in dataset",
order.by="freq",
decreasing=FALSE,
queries = list(
list(query = intersects, params = list("reactome","tm_epmc"), color = "blue", active = T),
list(query = intersects, params = list("imex","reactome","tm_epmc"), color= "darkorange2",active = T),
list(query = intersects, params = list("imex","reactome"), color= "lightgoldenrod2",active = T),
list(query = intersects, params = list("imex","tm_epmc"), color= "lightgoldenrod2",active = T)),
intersections = list(
list("reactome","tm_epmc"),
list("imex","reactome","tm_epmc"),
list("imex","reactome"),
list("imex","tm_epmc")))
## ------------------------------------------------------------------------
prepubpaircomp_table_1 <- unique(merge(imex_human_sel,reactome_pairs_pmids,by=c("pair_id","pmid"),all=T))
prepubpaircomp_table_2 <- unique(merge(prepubpaircomp_table_1,tm_pairs_pmids_sel,by=c("pair_id","pmid"),all=T))
pubpaircomp_table <- unique(merge(prepubpaircomp_table_2,iid_pred_pairs,by=c("pair_id"),all=T))
# I clean and replace all NAs if present.
pubpaircomp_table_form <- pubpaircomp_table
pubpaircomp_table_form[is.na(pubpaircomp_table_form <- pubpaircomp_table)] <- 0
## ------------------------------------------------------------------------
lhf <- pubpaircomp_table_final[pubpaircomp_table_final$imex==0 & pubpaircomp_table_final$iid_pred==1 & pubpaircomp_table_final$reactome==1 & pubpaircomp_table_final$tm_epmc==1,]
lhf_pairs <- unique(select(lhf,pair_id))
lhf_pmids <- unique(select(lhf,pmid))
## ----echo=FALSE, fig.width=10,fig.height=6-------------------------------
upset(pubpaircomp_table_form,
nsets = 4,
point.size = 6,
line.size = 2,
mainbar.y.label = "Common pair/publication combos",
sets.x.label = "Nr of pair/publication combos in dataset",
order.by="freq",
decreasing=FALSE,
queries = list(
list(query = intersects, params = list("reactome","iid_pred","tm_epmc"), color = "blue", active = T),
list(query = intersects, params = list("iid_pred","tm_epmc"), color= "cornflowerblue",active = T),
list(query = intersects, params = list("reactome","iid_pred"), color= "cornflowerblue",active = T),
list(query = intersects, params = list("reactome","tm_epmc"), color= "cornflowerblue",active = T),
list(query = intersects, params = list("imex","iid_pred","reactome","tm_epmc"), color= "darkorange2",active = T),
list(query = intersects, params = list("imex","reactome","tm_epmc"), color= "orange1",active = T),
list(query = intersects, params = list("imex","iid_pred","tm_epmc"), color= "orange1",active = T),
list(query = intersects, params = list("imex","iid_pred","reactome"), color= "orange1",active = T),
list(query = intersects, params = list("imex","iid_pred"), color= "lightgoldenrod2",active = T),
list(query = intersects, params = list("imex","reactome"), color= "lightgoldenrod2",active = T),
list(query = intersects, params = list("imex","tm_epmc"), color= "lightgoldenrod2",active = T),
list(query = intersects, params = list("imex"), color= "gray70",active = T),
list(query = intersects, params = list("reactome"), color= "gray70",active = T),
list(query = intersects, params = list("iid_pred"), color= "gray70",active = T),
list(query = intersects, params = list("tm_epmc"), color= "gray70",active = T)))
## ----echo=FALSE,fig.width=10,fig.height=6--------------------------------
upset(pubpaircomp_table_form,
nsets = 4,
point.size = 6,
line.size = 2,
mainbar.y.label = "Common pair/publication combos",
sets.x.label = "Nr of pair/publication combos in dataset",
order.by="freq",
decreasing=FALSE,
queries = list(
list(query = intersects, params = list("reactome","iid_pred","tm_epmc"), color = "blue", active = T),
list(query = intersects, params = list("iid_pred","tm_epmc"), color= "cornflowerblue",active = T),
list(query = intersects, params = list("reactome","iid_pred"), color= "cornflowerblue",active = T),
list(query = intersects, params = list("reactome","tm_epmc"), color= "cornflowerblue",active = T),
list(query = intersects, params = list("imex","iid_pred","reactome","tm_epmc"), color= "darkorange2",active = T),
list(query = intersects, params = list("imex","reactome","tm_epmc"), color= "orange1",active = T),
list(query = intersects, params = list("imex","iid_pred","tm_epmc"), color= "orange1",active = T),
list(query = intersects, params = list("imex","iid_pred","reactome"), color= "orange1",active = T),
list(query = intersects, params = list("imex","iid_pred"), color= "lightgoldenrod2",active = T),
list(query = intersects, params = list("imex","reactome"), color= "lightgoldenrod2",active = T),
list(query = intersects, params = list("imex","tm_epmc"), color= "lightgoldenrod2",active = T)),
intersections = list(
list("reactome","iid_pred","tm_epmc"),
list("iid_pred","tm_epmc"),
list("reactome","iid_pred"),
list("reactome","tm_epmc"),
list("imex","iid_pred","reactome","tm_epmc"),
list("imex","reactome","tm_epmc"),
list("imex","iid_pred","tm_epmc"),
list("imex","iid_pred","reactome"),
list("imex","iid_pred"),
list("imex","reactome"),
list("imex","tm_epmc")))
## ----pp_combo_preformat--------------------------------------------------
pubpaircomp_table_check_pt1 <- pubpaircomp_table_form
pubpaircomp_table_check_pt1$prots <- pubpaircomp_table_final$pair_id
pubpaircomp_table_check_pt2 <- cSplit(pubpaircomp_table_check_pt1, "prots", sep = "_", direction = "long")
## ----noncur_upload-------------------------------------------------------
noimex_spnoisof <- unique(fread("./imex_non_curated/Swissprot_without_isoforms_missing_in_IntAct.txt",header=F,colClasses = "character",data.table = F))
noimex_upnoisof <- unique(fread("./imex_non_curated/UniprotKB_without_isoforms_missing_in_IntAct.txt",header=F,colClasses = "character",data.table = F))
## ----missing_check-------------------------------------------------------
pubpaircomp_table_check_pt3 <- mutate(pubpaircomp_table_check_pt2,
noncur_prot =
ifelse(
prots %in% noimex_upnoisof$V1,
1,
0))
pubpaircomp_noncur_pairs <- unique(subset(pubpaircomp_table_check_pt3,noncur_prot==1,select= c("pair_id","noncur_prot")))
pubpaircomp_table_check_pt4 <- unique(merge(pubpaircomp_table_form,pubpaircomp_noncur_pairs,by="pair_id",all.x = T,all.y = F))
pubpaircomp_table_final <- pubpaircomp_table_check_pt4
pubpaircomp_table_final[is.na(pubpaircomp_table_final <- pubpaircomp_table_check_pt4)] <- 0
write.table(pubpaircomp_table_final,"./results/pubpaircomp_table_final.txt",col.names=T,row.names=F,sep="\t",quote=F)
setwd("./results")
system("tar -czvf pubpaircomp_table_final.txt.tar.gz pubpaircomp_table_final.txt && rm pubpaircomp_table_final.txt")
setwd("../")
## ----final_lhf-----------------------------------------------------------
lhf <- unique(subset(pubpaircomp_table_final,
imex == 0 &
reactome == 1 &
tm_epmc == 1 &
iid_pred == 1))
lhf <- arrange(lhf,desc(noncur_prot),desc(pmid))
write.table(lhf,"./results/lhf_list.txt",col.names=T,row.names = F,sep="\t",quote=F)
knitr::purl("dsp_comparison.Rmd",output="dsp_comparison.R")
View(reactome_pairs_pmids)
head(comp_table)
pubpaircomp_table_final <- pubpaircomp_table_check_pt4
pubpaircomp_table_check_pt1 <- pubpaircomp_table_form
pubpaircomp_table_check_pt1$prots <- pubpaircomp_table_form$pair_id
pubpaircomp_table_check_pt2 <- cSplit(pubpaircomp_table_check_pt1, "prots", sep = "_", direction = "long")
pubpaircomp_table_check_pt3 <- mutate(pubpaircomp_table_check_pt2,
noncur_prot =
ifelse(
prots %in% noimex_upnoisof$V1,
1,
0))
pubpaircomp_noncur_pairs <- unique(subset(pubpaircomp_table_check_pt3,noncur_prot==1,select= c("pair_id","noncur_prot")))
pubpaircomp_table_check_pt4 <- unique(merge(pubpaircomp_table_form,pubpaircomp_noncur_pairs,by="pair_id",all.x = T,all.y = F))
pubpaircomp_table_final <- pubpaircomp_table_check_pt4
pubpaircomp_table_final[is.na(pubpaircomp_table_final <- pubpaircomp_table_check_pt4)] <- 0
pubpairs_not_imex <- pubpaircomp_table_final[imex==0,]
View(pubpaircomp_table_final)
pubpairs_not_imex <- pubpaircomp_table_final[3==0,]
library(dplyr)
colnames(pubpairs_not_imex)
publs_not_imex <- unique(select(pubpairs_not_imex,pmid,imex,reactome,tm_epmc,iid_pred,noncur_prot))
pubpairs_not_imex <- pubpaircomp_table_final[pubpaircomp_table_final$imex==0,]
publs_not_imex <- unique(select(pubpairs_not_imex,pmid,imex,reactome,tm_epmc,iid_pred,noncur_prot))
head(publs_not_imex)
reactpubl_not_imex <- publs_not_imex[publs_not_imex$reactome==1,]
reactpubl_sample <- reactpubl_not_imex[sample(1:nrow(reactpubl_not_imex),100),]
View(reactpubl_sample)
set.seed(161220)
reactpubl_sample <- reactpubl_not_imex[sample(1:nrow(reactpubl_not_imex),100),]
pubpairs_not_imex_sel <- unique(select(pubpairs_not_imex,pmid,pair_id))
react_sample <- unique(merge(reactpubl_sample,pubpairs_not_imex_sel,by="pmid"))
View(react_sample)
library(plyr)
View(pubpairs_not_imex_sel)
View(pubpairs_not_imex)
set.seed(161221)
reactpubl_sample <- reactpubl_not_imex[sample(1:nrow(reactpubl_not_imex),100),]
react_sample <- unique(merge(reactpubl_sample,pubpairs_not_imex_sel,by="pmid"))
reactpubl_sample <- reactpubl_not_imex[sample(1:nrow(reactpubl_not_imex),100),]
react_sample <- unique(merge(reactpubl_sample,pubpairs_not_imex_sel,by="pmid"))
reactpubl_sample <- reactpubl_not_imex[sample(1:nrow(reactpubl_not_imex),100),]
react_sample <- unique(merge(reactpubl_sample,pubpairs_not_imex_sel,by="pmid"))
set.seed(161220)
reactpubl_sample <- reactpubl_not_imex[sample(1:nrow(reactpubl_not_imex),100),]
react_sample <- unique(merge(reactpubl_sample,pubpairs_not_imex_sel,by="pmid"))
set.seed(1)
reactpubl_sample <- reactpubl_not_imex[sample(1:nrow(reactpubl_not_imex),100),]
react_sample <- unique(merge(reactpubl_sample,pubpairs_not_imex_sel,by="pmid"))
react_sample_short <- ddply(react_sample, "pmid", summarize,
pairs = paste(unique(pair_id), collapse = ";"))
View(react_sample_short)
set.seed(88)
reactpubl_sample <- reactpubl_not_imex[sample(1:nrow(reactpubl_not_imex),100),]
react_sample <- unique(merge(reactpubl_sample,pubpairs_not_imex_sel,by="pmid"))
react_sample_short <- ddply(react_sample, "pmid", summarize,
pairs = paste(unique(pair_id), collapse = ";"))
View(react_sample_short)
pubpairs_not_imex <- pubpaircomp_table_final[pubpaircomp_table_final$imex==0 & pubpaircomp_table_final$pair_id != "",]
pubpairs_not_imex_sel <- unique(select(pubpairs_not_imex,pmid,pair_id))
publs_not_imex <- unique(select(pubpairs_not_imex,pmid,imex,reactome,tm_epmc,iid_pred,noncur_prot))
reactpubl_not_imex <- publs_not_imex[publs_not_imex$reactome==1,]
set.seed(88)
reactpubl_sample <- reactpubl_not_imex[sample(1:nrow(reactpubl_not_imex),100),]
react_sample <- unique(merge(reactpubl_sample,pubpairs_not_imex_sel,by="pmid"))
react_sample_short <- ddply(react_sample, "pmid", summarize,
pairs = paste(unique(pair_id), collapse = ";"))
View(react_sample)
react_sample_short <- ddply(react_sample, "pmid", summarize,
pairs = paste(unique(pair_id), collapse = ";"))
tm_not_imex <- publs_not_imex[publs_not_imex$tm_epmc==1,]
tm_sample <- tml_not_imex[sample(1:nrow(tm_not_imex),100),]
tm_sample <- tm_not_imex[sample(1:nrow(tm_not_imex),100),]
tmpubl_not_imex <- publs_not_imex[publs_not_imex$tm_epmc==1,]
tmpubl_sample <- tm_not_imex[sample(1:nrow(tm_not_imex),100),]
tm_sample <- unique(merge(tmpubl_sample,pubpairs_not_imex_sel,by="pmid"))
View(tm_sample)
write.table(reactpubl_sample,"./results/reactpubl_sample.txt",col.names = T,row.names = F,sep="\t",quote=F)
write.table(tmpubl_sample,"./results/tmpubl_sample.txt",col.names = T,row.names = F,sep="\t",quote=F)
