cross.area = textmining_2[tm_epmc == 1 & EVEX == 1,.N],
category = c("EPMC text-mining",
"EVEX"),
lty = rep("blank", 2),
fill = c("blue", "red"),
alpha = rep(0.5, 2), cat.pos = c(350, 25),
cat.dist = c(0.08,0.035),
cat.cex = c(0.9,0.9), scaled = TRUE, euler.d = TRUE,  margin = 0.05,
print.mode =  'raw',
cex = 0.8
)
popViewport()
pushViewport(viewport(layout.pos.col=4, layout.pos.row = 3))
textmining_3 = unique(pubpaircomp_table_form[,.(pair_id, pmid, tm_epmc, EVEX)])
venn_Pathways_3 = draw.pairwise.venn(area1 = textmining_3[tm_epmc == 1,.N],
area2 = textmining_3[EVEX == 1,.N],
cross.area = textmining_3[tm_epmc == 1 & EVEX == 1,.N],
category = c("EPMC text-mining",
"EVEX"),
lty = rep("blank", 2),
fill = c("blue", "red"),
alpha = rep(0.5, 2), cat.pos = c(350, 25),
cat.dist = c(0.08,0.035),
cat.cex = c(0.9,0.9), scaled = TRUE, euler.d = TRUE,  margin = 0.05,
print.mode =  'raw',
cex = 0.8
)
popViewport()
}
{
grid.newpage()
plotname = paste0("Comparison of predictions resources: IID and STRING phylogeny-/orthology-based predictions")
# setup grid
pushViewport(viewport(layout=grid.layout(nrow = 3, ncol=3, widths = unit(c(3/14,8/14,3/14), "npc"),
heights = unit(c(1/7, 1/7, 5/7), "npc"))))
# plot names
pushViewport(viewport(layout.pos.col=2, layout.pos.row = 1))
x =grid.text(plotname, x = unit(1.7, "npc"),y= unit(0.5, "npc"))
popViewport()
# individual labels
pushViewport(viewport(layout.pos.col=2, layout.pos.row = 2))
x =grid.text("interacting pairs", x = unit(0.5, "npc"),y= unit(0.5, "npc"))
popViewport()
# venn diagrams
pushViewport(viewport(layout.pos.col=2, layout.pos.row = 3))
Predictions_1 = unique(comp_table_final[,.(pair_id, iid_pred, STRING_phylo_predictions)])
venn_Pathways_2 = draw.pairwise.venn(area1 = Predictions_1[iid_pred == 1,.N],
area2 = Predictions_1[STRING_phylo_predictions == 1,.N],
cross.area = Predictions_1[iid_pred == 1 & STRING_phylo_predictions == 1,.N],
category = c("IID predictions",
"STRING predictions"),
lty = rep("blank", 2),
fill = c("blue", "red"),
alpha = rep(0.5, 2), cat.pos = c(350, 25),
cat.dist = c(0.08,0.035),
cat.cex = c(0.9,0.9), scaled = TRUE, euler.d = TRUE,  margin = 0.05,
print.mode =  'raw',
cex = 0.8
)
popViewport()
}
{
grid.newpage()
plotname = paste0("Comparison of interaction resources: IMEx, Biogrid, GO IPI")
# setup grid
pushViewport(viewport(layout=grid.layout(nrow = 3, ncol=5, widths = unit(c(1/14,4/14,4/14,4/14,1/14), "npc"),
heights = unit(c(1/7, 1/7, 5/7), "npc"))))
# plot names
pushViewport(viewport(layout.pos.col=2, layout.pos.row = 1))
x =grid.text(plotname, x = unit(0.7, "npc"),y= unit(0.5, "npc"))
popViewport()
# individual labels
pushViewport(viewport(layout.pos.col=2, layout.pos.row = 2))
x =grid.text("interacting pairs", x = unit(0.5, "npc"),y= unit(0.5, "npc"))
popViewport()
pushViewport(viewport(layout.pos.col=3, layout.pos.row = 2))
x =grid.text("publications", x = unit(0.5, "npc"),y= unit(0.5, "npc"))
popViewport()
pushViewport(viewport(layout.pos.col=4, layout.pos.row = 2))
x =grid.text("interacting pairs and publications", x = unit(0.5, "npc"),y= unit(0.5, "npc"))
popViewport()
# venn diagrams
pushViewport(viewport(layout.pos.col=2, layout.pos.row = 3))
Interactions_1 = unique(comp_table_final[,.(pair_id, imex, BioGRID, GO_IPI)])
N_Interactions_1 = nrow(Interactions_1)
venn_Interactions_1 = draw.triple.venn(area1 = Interactions_1[imex == 1,.N],
area2 = Interactions_1[BioGRID == 1,.N],
area3 = Interactions_1[GO_IPI == 1,.N],
n12 = Interactions_1[imex == 1 & BioGRID == 1,.N],
n23 = Interactions_1[BioGRID == 1 & GO_IPI == 1,.N],
n13 = Interactions_1[imex == 1 & GO_IPI == 1,.N],
n123 = Interactions_1[imex == 1 & BioGRID == 1 & GO_IPI == 1,.N],
category = c("IMEx",
"BioGRID",
"GO_IPI"),
lty = rep("blank", 3),
fill = c("blue", "red", "green"),
alpha = rep(0.5, 3), cat.pos = c(350, 25, 160),
cat.dist = c(0.08,0.035, 0.08),
cat.cex = c(0.9,0.9, 0.9), scaled = TRUE, euler.d = TRUE,  margin = 0.05,
print.mode =  'raw',
cex = 0.8
)
popViewport()
pushViewport(viewport(layout.pos.col=3, layout.pos.row = 3))
Interactions_2 = unique(pubcomp_table_final[,.(pmid, imex, BioGRID, GO_IPI)])
N_Interactions_2 = nrow(Interactions_2)
venn_Interactions_2 = draw.triple.venn(area1 = Interactions_2[imex == 1,.N],
area2 = Interactions_2[BioGRID == 1,.N],
area3 = Interactions_2[GO_IPI == 1,.N],
n12 = Interactions_2[imex == 1 & BioGRID == 1,.N],
n23 = Interactions_2[BioGRID == 1 & GO_IPI == 1,.N],
n13 = Interactions_2[imex == 1 & GO_IPI == 1,.N],
n123 = Interactions_2[imex == 1 & BioGRID == 1 & GO_IPI == 1,.N],
category = c("IMEx",
"BioGRID",
"GO_IPI"),
lty = rep("blank", 3),
fill = c("blue", "red", "green"),
alpha = rep(0.5, 3), cat.pos = c(350, 25, 160),
cat.dist = c(0.08,0.035, 0.08),
cat.cex = c(0.9,0.9, 0.9), scaled = TRUE, euler.d = TRUE,  margin = 0.05,
print.mode =  'raw',
cex = 0.8
)
popViewport()
pushViewport(viewport(layout.pos.col=4, layout.pos.row = 3))
Interactions_3 = unique(pubpaircomp_table_form[,.(pair_id, pmid, imex, BioGRID, GO_IPI)])
N_Interactions_3 = nrow(Interactions_3)
venn_Interactions_3 = draw.triple.venn(area1 = Interactions_3[imex == 1,.N],
area2 = Interactions_3[BioGRID == 1,.N],
area3 = Interactions_3[GO_IPI == 1,.N],
n12 = Interactions_3[imex == 1 & BioGRID == 1,.N],
n23 = Interactions_3[BioGRID == 1 & GO_IPI == 1,.N],
n13 = Interactions_3[imex == 1 & GO_IPI == 1,.N],
n123 = Interactions_3[imex == 1 & BioGRID == 1 & GO_IPI == 1,.N],
category = c("IMEx",
"BioGRID",
"GO_IPI"),
lty = rep("blank", 3),
fill = c("blue", "red", "green"),
alpha = rep(0.5, 3), cat.pos = c(350, 25, 160),
cat.dist = c(0.08,0.035, 0.08),
cat.cex = c(0.9,0.9, 0.9), scaled = TRUE, euler.d = TRUE,  margin = 0.05,
print.mode =  'raw',
cex = 0.8
)
popViewport()
}
## getting the publication ID for each gene
{
geneID2pubmed_url = "ftp://ftp.ncbi.nih.gov/gene/DATA/gene2pubmed.gz"
geneID2pubmed_filename = paste0("./geneID2pubmed_release_", format(Sys.Date(), "%m-%Y.gz"))
geneID2pubmed_filename_txt = substr(geneID2pubmed_filename, 1, nchar(geneID2pubmed_filename)-3)
if(!file.exists(geneID2pubmed_filename_txt)) {
downloader::download(geneID2pubmed_url, geneID2pubmed_filename)
R.utils::gunzip(geneID2pubmed_filename)
gitignore = c(readLines("../.gitignore"), paste0("/dsp_comparison/geneID2pubmed_release_", format(Sys.Date(), "%m-%Y")))
write(gitignore,"../.gitignore")
}
}
# getting all pmids which have genes associated with them
geneID2pubmed = fread(geneID2pubmed_filename_txt, colClasses = c("character","character","character"))
pubmedIDs = geneID2pubmed[`#tax_id` == "9606",unique(PubMed_ID)]
# enrichment of resources in imex-curated publications
# all gene-assiciated pmids
total_Npmids = length(pubmedIDs)
imex_Npmids = length(pubcomp_table_final[imex == 1,unique(pmid)])
# counting pmids in each of the resources
resources = colnames(pubcomp_table_final)[2:8]
resources_Npmids = sapply(resources, function(x) eval(parse(text=paste0("length(pubcomp_table_final[",x," == 1,unique(pmid)])"))))
# how many pmids overlap with IMEx
resources_Npmids_in_IMEx = sapply(resources, function(x) eval(parse(text=paste0("length(pubcomp_table_final[imex == 1 & ",x," == 1,unique(pmid)])"))))
resources_Npmids2 = rbind(resources_Npmids, resources_Npmids_in_IMEx)
# hypergeometric test
apply(resources_Npmids2,2, function(x){
phyper(q = x[2], m = imex_Npmids, n = total_Npmids - imex_Npmids, k = x[1], lower.tail = F, log.p = FALSE)
})
# all pmids in our resources
total_Npmids_our = length(pubcomp_table_final[,unique(pmid)])
# hypergeometric test
apply(resources_Npmids2,2, function(x){
phyper(q = x[2], m = imex_Npmids, n = total_Npmids_our - imex_Npmids, k = x[1], lower.tail = F, log.p = FALSE)
})
BioGRID_Npmids = length(pubcomp_table_final[BioGRID == 1,unique(pmid)])
resources_Npmids_in_BioGRID = sapply(resources, function(x) eval(parse(text=paste0("length(pubcomp_table_final[BioGRID == 1 & ",x," == 1,unique(pmid)])"))))
resources_Npmids2 = rbind(resources_Npmids, resources_Npmids_in_BioGRID)
apply(resources_Npmids2,2, function(x){
phyper(q = x[2], m = BioGRID_Npmids, n = total_Npmids - BioGRID_Npmids, k = x[1], lower.tail = F, log.p = FALSE)
})
# enrichment of resources in imex-curated publications
# all gene-assiciated pmids
total_Npmids = length(pubmedIDs)
imex_Npmids = length(pubcomp_table_final[imex == 1,unique(pmid)])
# counting pmids in each of the resources
resources = colnames(pubcomp_table_final)[2:8]
resources_Npmids = sapply(resources, function(x) eval(parse(text=paste0("length(pubcomp_table_final[",x," == 1,unique(pmid)])"))))
# how many pmids overlap with IMEx
resources_Npmids_in_IMEx = sapply(resources, function(x) eval(parse(text=paste0("length(pubcomp_table_final[imex == 1 & ",x," == 1,unique(pmid)])"))))
resources_Npmids2 = rbind(resources_Npmids, resources_Npmids_in_IMEx)
resources_Npmids2 = cbind(resources_Npmids2, gene2pubmed = c(total_Npmids, imex_Npmids))
resources_Npmids2 = rbind(resources_Npmids2, fraction = c(resources_Npmids2[2,]/resources_Npmids2[1,]))
qplot(x = colnames(resources_Npmids2), y =resources_Npmids2[3,], geom = "text",label = signif(resources_Npmids2[3,],3), ylab = "fraction of papers in IMEx", xlab = NULL) + scale_y_continuous(breaks = seq(0,1,0.05))
# enrichment of resources in BioGRID-curated publications
# all gene-assiciated pmids
total_Npmids = length(pubmedIDs)
BioGRID_Npmids = length(pubcomp_table_final[BioGRID == 1,unique(pmid)])
# counting pmids in each of the resources
resources = colnames(pubcomp_table_final)[2:8]
resources_Npmids = sapply(resources, function(x) eval(parse(text=paste0("length(pubcomp_table_final[",x," == 1,unique(pmid)])"))))
# how many pmids overlap with BioGRID
resources_Npmids_in_BioGRID = sapply(resources, function(x) eval(parse(text=paste0("length(pubcomp_table_final[BioGRID == 1 & ",x," == 1,unique(pmid)])"))))
resources_Npmids2 = rbind(resources_Npmids, resources_Npmids_in_BioGRID)
resources_Npmids2 = cbind(resources_Npmids2, gene2pubmed = c(total_Npmids, imex_Npmids))
resources_Npmids2 = rbind(resources_Npmids2, fraction = c(resources_Npmids2[2,]/resources_Npmids2[1,]))
qplot(x = colnames(resources_Npmids2), y =resources_Npmids2[3,], geom = "text",label = signif(resources_Npmids2[3,],3), ylab = "fraction of papers in BioGRID", xlab = NULL) + scale_y_continuous(breaks = seq(0,1,0.05))+geom_text()
# enrichment of resources in imex-curated publications
# all gene-assiciated pmids
total_Npmids = length(pubmedIDs)
imex_Npmids = length(comp_table_final[imex == 1,unique(pmid)])
comp_table_final
resources = colnames(comp_table_final)[1:12]
resources
resources = colnames(comp_table_final)[2:12]
resources
# enrichment of resources in imex-curated interacting pairs
imex_Npmids = length(comp_table_final[imex == 1,unique(pair_id)])
# counting pmids in each of the resources
resources = colnames(comp_table_final)[2:12]
resources_Npmids = sapply(resources, function(x) eval(parse(text=paste0("length(comp_table_final[",x," == 1,unique(pair_id)])"))))
# how many pmids overlap with IMEx
resources_Npmids_in_IMEx = sapply(resources, function(x) eval(parse(text=paste0("length(comp_table_final[imex == 1 & ",x," == 1,unique(pair_id)])"))))
resources_Npmids2 = rbind(resources_Npmids, resources_Npmids_in_IMEx)
# resources_Npmids2 = cbind(resources_Npmids2, gene2pubmed = c(total_Npmids, imex_Npmids))
resources_Npmids2 = rbind(resources_Npmids2, fraction = c(resources_Npmids2[2,]/resources_Npmids2[1,]))
qplot(x = colnames(resources_Npmids2), y =resources_Npmids2[3,], geom = "text",label = signif(resources_Npmids2[3,],3), ylab = "fraction of interacting pairs in IMEx", xlab = NULL) + scale_y_continuous(breaks = seq(0,1,0.05))
# enrichment of resources in BioGRID-curated publications
# all gene-assiciated pmids
total_Npmids = length(pubmedIDs)
BioGRID_Npmids = length(comp_table_final[BioGRID == 1,unique(pair_id)])
# counting pmids in each of the resources
resources = colnames(comp_table_final)[2:8]
resources_Npmids = sapply(resources, function(x) eval(parse(text=paste0("length(comp_table_final[",x," == 1,unique(pair_id)])"))))
# how many pmids overlap with BioGRID
resources_Npmids_in_BioGRID = sapply(resources, function(x) eval(parse(text=paste0("length(comp_table_final[BioGRID == 1 & ",x," == 1,unique(pair_id)])"))))
resources_Npmids2 = rbind(resources_Npmids, resources_Npmids_in_BioGRID)
# resources_Npmids2 = cbind(resources_Npmids2, gene2pubmed = c(total_Npmids, imex_Npmids))
resources_Npmids2 = rbind(resources_Npmids2, fraction = c(resources_Npmids2[2,]/resources_Npmids2[1,]))
qplot(x = colnames(resources_Npmids2), y =resources_Npmids2[3,], geom = "text",label = signif(resources_Npmids2[3,],3), ylab = "fraction of interacting pairs in BioGRID", xlab = NULL) + scale_y_continuous(breaks = seq(0,1,0.05))+geom_text()
# enrichment of resources in BioGRID-curated publications
# all gene-assiciated pmids
total_Npmids = length(pubmedIDs)
BioGRID_Npmids = length(comp_table_final[BioGRID == 1,unique(pair_id)])
# counting pmids in each of the resources
resources = colnames(comp_table_final)[2:12]
resources_Npmids = sapply(resources, function(x) eval(parse(text=paste0("length(comp_table_final[",x," == 1,unique(pair_id)])"))))
# how many pmids overlap with BioGRID
resources_Npmids_in_BioGRID = sapply(resources, function(x) eval(parse(text=paste0("length(comp_table_final[BioGRID == 1 & ",x," == 1,unique(pair_id)])"))))
resources_Npmids2 = rbind(resources_Npmids, resources_Npmids_in_BioGRID)
# resources_Npmids2 = cbind(resources_Npmids2, gene2pubmed = c(total_Npmids, imex_Npmids))
resources_Npmids2 = rbind(resources_Npmids2, fraction = c(resources_Npmids2[2,]/resources_Npmids2[1,]))
qplot(x = colnames(resources_Npmids2), y =resources_Npmids2[3,], geom = "text",label = signif(resources_Npmids2[3,],3), ylab = "fraction of interacting pairs in BioGRID", xlab = NULL) + scale_y_continuous(breaks = seq(0,1,0.05))+geom_text()
qplot(x = colnames(resources_Npmids2), y =resources_Npmids2[3,], geom = "text",label = signif(resources_Npmids2[3,],3), ylab = "fraction of interacting pairs in BioGRID", xlab = NULL) + scale_y_continuous(breaks = seq(0,1,0.05))+geom_text()+theme(axis.text.x = element_text(angle =45))
qplot(x = colnames(resources_Npmids2), y =resources_Npmids2[3,], geom = "text",label = signif(resources_Npmids2[3,],3), ylab = "fraction of interacting pairs in BioGRID", xlab = NULL) + scale_y_continuous(breaks = seq(0,1,0.05))+geom_text()+theme(axis.text.x = element_text(angle =-45))
qplot(x = colnames(resources_Npmids2), y =resources_Npmids2[3,], geom = "text",label = signif(resources_Npmids2[3,],3), ylab = "fraction of interacting pairs in BioGRID", xlab = NULL) + scale_y_continuous(breaks = seq(0,1,0.05))+geom_text()+theme(axis.text.x = element_text(angle =-25))
qplot(x = colnames(resources_Npmids2), y =resources_Npmids2[3,], geom = "text",label = signif(resources_Npmids2[3,],3), ylab = "fraction of interacting pairs in BioGRID", xlab = NULL) + scale_y_continuous(breaks = seq(0,1,0.05))+geom_text()+theme(axis.text.x = element_text(angle =-25, vjust = 10))
qplot(x = colnames(resources_Npmids2), y =resources_Npmids2[3,], geom = "text",label = signif(resources_Npmids2[3,],3), ylab = "fraction of interacting pairs in BioGRID", xlab = NULL) + scale_y_continuous(breaks = seq(0,1,0.05))+geom_text()+theme(axis.text.x = element_text(angle =-25, vjust = 1))
qplot(x = colnames(resources_Npmids2), y =resources_Npmids2[3,], geom = "text",label = signif(resources_Npmids2[3,],3), ylab = "fraction of interacting pairs in BioGRID", xlab = NULL) + scale_y_continuous(breaks = seq(0,1,0.05))+geom_text()+theme(axis.text.x = element_text(angle =-25, vjust = 1.2))
qplot(x = colnames(resources_Npmids2), y =resources_Npmids2[3,], geom = "text",label = signif(resources_Npmids2[3,],3), ylab = "fraction of interacting pairs in BioGRID", xlab = NULL) + scale_y_continuous(breaks = seq(0,1,0.05))+geom_text()+theme(axis.text.x = element_text(angle =-25, vjust = 2))
qplot(x = colnames(resources_Npmids2), y =resources_Npmids2[3,], geom = "text",label = signif(resources_Npmids2[3,],3), ylab = "fraction of interacting pairs in BioGRID", xlab = NULL) + scale_y_continuous(breaks = seq(0,1,0.05))+geom_text()+theme(axis.text.x = element_text(angle =-25, vjust = -2))
qplot(x = colnames(resources_Npmids2), y =resources_Npmids2[3,], geom = "text",label = signif(resources_Npmids2[3,],3), ylab = "fraction of interacting pairs in BioGRID", xlab = NULL) + scale_y_continuous(breaks = seq(0,1,0.05))+geom_text()+theme(axis.text.x = element_text(angle =-25, vjust = -1.5))
qplot(x = colnames(resources_Npmids2), y =resources_Npmids2[3,], geom = "text",label = signif(resources_Npmids2[3,],3), ylab = "fraction of interacting pairs in BioGRID", xlab = NULL) + scale_y_continuous(breaks = seq(0,1,0.05))+geom_text()+theme(axis.text.x = element_text(angle =-25, vjust = -0.5))
qplot(x = colnames(resources_Npmids2), y =resources_Npmids2[3,], geom = "text",label = signif(resources_Npmids2[3,],3), ylab = "fraction of interacting pairs in BioGRID", xlab = NULL) + scale_y_continuous(breaks = seq(0,1,0.05))+geom_text()+theme(axis.text.x = element_text(angle =-25, vjust = -0.9))
qplot(x = colnames(resources_Npmids2), y =resources_Npmids2[3,], geom = "text",label = signif(resources_Npmids2[3,],3), ylab = "fraction of interacting pairs in BioGRID", xlab = NULL) + scale_y_continuous(breaks = seq(0,1,0.05))+geom_text()+theme(axis.text.x = element_text(angle =-25, vjust = 0.9))
qplot(x = colnames(resources_Npmids2), y =resources_Npmids2[3,], geom = "text",label = signif(resources_Npmids2[3,],3), ylab = "fraction of interacting pairs in BioGRID", xlab = NULL) + scale_y_continuous(breaks = seq(0,1,0.05))+geom_text()+theme(axis.text.x = element_text(angle =-25, vjust = 0.5))
qplot(x = colnames(resources_Npmids2), y =resources_Npmids2[3,], geom = "text",label = signif(resources_Npmids2[3,],3), ylab = "fraction of interacting pairs in BioGRID", xlab = NULL) + scale_y_continuous(breaks = seq(0,1,0.05))+geom_text()+theme(axis.text.x = element_text(angle =-25, vjust = 0.7))
qplot(x = colnames(resources_Npmids2), y =resources_Npmids2[3,], geom = "text",label = signif(resources_Npmids2[3,],3), ylab = "fraction of interacting pairs in BioGRID", xlab = NULL) + scale_y_continuous(breaks = seq(0,1,0.05))+geom_text()+theme(axis.text.x = element_text(angle =-25, vjust = 0.6))
qplot(x = colnames(resources_Npmids2), y =resources_Npmids2[3,], geom = "text",label = signif(resources_Npmids2[3,],3), ylab = "fraction of interacting pairs in BioGRID", xlab = NULL) + scale_y_continuous(breaks = seq(0,1,0.05))+geom_text()+theme(axis.ticks = element_line(size10),axis.text.x = element_text(angle =-25, vjust = 0.6))
qplot(x = colnames(resources_Npmids2), y =resources_Npmids2[3,], geom = "text",label = signif(resources_Npmids2[3,],3), ylab = "fraction of interacting pairs in BioGRID", xlab = NULL) + scale_y_continuous(breaks = seq(0,1,0.05))+geom_text()+theme(axis.ticks = element_line(size=10),axis.text.x = element_text(angle =-25, vjust = 0.6))
?element_line
qplot(x = colnames(resources_Npmids2), y =resources_Npmids2[3,], geom = "text",label = signif(resources_Npmids2[3,],3), ylab = "fraction of interacting pairs in BioGRID", xlab = NULL) + scale_y_continuous(breaks = seq(0,1,0.05))+geom_text(x = colnames(resources_Npmids2), y =resources_Npmids2[3,],label = paste0(signif(resources_Npmids2[1,],3),"/\n",signif(resources_Npmids2[2,],3)), vjust =1)+theme(,axis.text.x = element_text(angle =-25, vjust = 0.6))
qplot(x = colnames(resources_Npmids2), y =resources_Npmids2[3,], geom = "text",label = signif(resources_Npmids2[3,],3), ylab = "fraction of interacting pairs in BioGRID", xlab = NULL) + scale_y_continuous(breaks = seq(0,1,0.05))+geom_text(x = colnames(resources_Npmids2), y =resources_Npmids2[3,],label = paste0(signif(resources_Npmids2[1,],3),"/\n",signif(resources_Npmids2[2,],3)))+theme(,axis.text.x = element_text(angle =-25, vjust = 0.6))
qplot(x = colnames(resources_Npmids2), y =resources_Npmids2[3,], geom = "text",label = signif(resources_Npmids2[3,],3), ylab = "fraction of interacting pairs in BioGRID", xlab = NULL) + scale_y_continuous(breaks = seq(0,1,0.05))+theme(,axis.text.x = element_text(angle =-25, vjust = 0.6))
qplot(x = colnames(resources_Npmids2), y =resources_Npmids2[3,], geom = "text",label = signif(resources_Npmids2[3,],3), ylab = "fraction of interacting pairs in BioGRID", xlab = NULL) + scale_y_continuous(breaks = seq(0,1,0.05))+theme(,axis.text.x = element_text(angle =-25, vjust = 0.6))+geom_text(label = paste0(signif(resources_Npmids2[1,],3),"/\n",signif(resources_Npmids2[2,],3)))
qplot(x = colnames(resources_Npmids2), y =resources_Npmids2[3,], geom = "text",label = signif(resources_Npmids2[3,],3), ylab = "fraction of interacting pairs in BioGRID", xlab = NULL) + scale_y_continuous(breaks = seq(0,1,0.05))+theme(,axis.text.x = element_text(angle =-25, vjust = 0.6))+geom_text(label = paste0(signif(resources_Npmids2[1,],3)," /\n",signif(resources_Npmids2[2,],3)), vjust = 1)
qplot(x = colnames(resources_Npmids2), y =resources_Npmids2[3,], geom = "text",label = signif(resources_Npmids2[3,],3), ylab = "fraction of interacting pairs in BioGRID", xlab = NULL) + scale_y_continuous(breaks = seq(0,1,0.05))+theme(,axis.text.x = element_text(angle =-25, vjust = 0.6))+geom_text(label = paste0(signif(resources_Npmids2[1,],3)," /\n",signif(resources_Npmids2[2,],3)), vjust = 3)
qplot(x = colnames(resources_Npmids2), y =resources_Npmids2[3,], geom = "text",label = signif(resources_Npmids2[3,],3), ylab = "fraction of interacting pairs in BioGRID", xlab = NULL) + scale_y_continuous(breaks = seq(0,1,0.05))+theme(,axis.text.x = element_text(angle =-25, vjust = 0.6))+geom_text(label = paste0(signif(resources_Npmids2[1,],3)," /\n",signif(resources_Npmids2[2,],3)), vjust = -3)
qplot(x = colnames(resources_Npmids2), y =resources_Npmids2[3,], geom = "text",label = signif(resources_Npmids2[3,],3), ylab = "fraction of interacting pairs in BioGRID", xlab = NULL) + scale_y_continuous(breaks = seq(0,1,0.05))+theme(,axis.text.x = element_text(angle =-25, vjust = 0.6))+geom_text(label = paste0(signif(resources_Npmids2[1,],3)," /\n",signif(resources_Npmids2[2,],3)), vjust = -2)
qplot(x = colnames(resources_Npmids2), y =resources_Npmids2[3,], geom = "text",label = signif(resources_Npmids2[3,],3), ylab = "fraction of interacting pairs in BioGRID", xlab = NULL) + scale_y_continuous(breaks = seq(0,1,0.05))+theme(,axis.text.x = element_text(angle =-25, vjust = 0.6))+geom_text(label = paste0(signif(resources_Npmids2[1,],3)," /\n",signif(resources_Npmids2[2,],3)), vjust = -1)
qplot(x = colnames(resources_Npmids2), y =resources_Npmids2[3,], geom = "point", ylab = "fraction of interacting pairs in BioGRID", xlab = NULL) + scale_y_continuous(breaks = seq(0,1,0.05))+theme(,axis.text.x = element_text(angle =-25, vjust = 0.6))+geom_text(label = paste0(signif(resources_Npmids2[1,],3)," /\n",signif(resources_Npmids2[2,],3)), vjust = -1)+geom_text(label = signif(resources_Npmids2[3,],3), vjust = -1)
qplot(x = colnames(resources_Npmids2), y =resources_Npmids2[3,], geom = "point", ylab = "fraction of interacting pairs in BioGRID", xlab = NULL) + scale_y_continuous(breaks = seq(0,1,0.05))+theme(,axis.text.x = element_text(angle =-25, vjust = 0.6))+geom_text(label = paste0(signif(resources_Npmids2[1,],3)," /\n",signif(resources_Npmids2[2,],3)), vjust = -1)+geom_text(label = signif(resources_Npmids2[3,],3), vjust = 1)
qplot(x = colnames(resources_Npmids2), y =resources_Npmids2[3,], geom = "point", ylab = "fraction of interacting pairs in BioGRID", xlab = NULL) + scale_y_continuous(breaks = seq(0,1,0.05))+theme(,axis.text.x = element_text(angle =-25, vjust = 0.6))+geom_text(label = paste0(signif(resources_Npmids2[1,],3)," /\n",signif(resources_Npmids2[2,],3)), vjust = -1)+geom_text(label = signif(resources_Npmids2[3,],3), vjust = 1.2)
qplot(x = colnames(resources_Npmids2), y =resources_Npmids2[3,], geom = "point", ylab = "fraction of interacting pairs in BioGRID", xlab = NULL) + scale_y_continuous(breaks = seq(0,1,0.05))+theme(,axis.text.x = element_text(angle =-25, vjust = 0.6))+geom_text(label = paste0(signif(resources_Npmids2[1,],3)," /\n",signif(resources_Npmids2[2,],3)), vjust = -0.9)+geom_text(label = signif(resources_Npmids2[3,],3), vjust = 1.2)
qplot(x = colnames(resources_Npmids2), y =resources_Npmids2[3,], geom = "point", ylab = "fraction of interacting pairs in BioGRID", xlab = NULL) + scale_y_continuous(breaks = seq(0,1,0.05))+theme(,axis.text.x = element_text(angle =-25, vjust = 0.6))+geom_text(label = paste0(signif(resources_Npmids2[1,],3)," /\n",signif(resources_Npmids2[2,],3)), vjust = -0.5)+geom_text(label = signif(resources_Npmids2[3,],3), vjust = 1.2)
qplot(x = colnames(resources_Npmids2), y =resources_Npmids2[3,], geom = "point", ylab = "fraction of interacting pairs in BioGRID", xlab = NULL) + scale_y_continuous(breaks = seq(0,1,0.05))+theme(,axis.text.x = element_text(angle =-25, vjust = 0.6))+geom_text(label = paste0(signif(resources_Npmids2[1,],3)," /\n",signif(resources_Npmids2[2,],3)), vjust = -0.5)+geom_text(label = signif(resources_Npmids2[3,],3), vjust = 1.3)
qplot(x = colnames(resources_Npmids2), y =resources_Npmids2[3,], geom = "point", ylab = "fraction of papers in IMEx", xlab = NULL) + scale_y_continuous(breaks = seq(0,1,0.05))+theme(axis.text.x = element_text(angle =-25, vjust = 0.6))+geom_text(label = paste0(signif(resources_Npmids2[1,],3)," /\n",signif(resources_Npmids2[2,],3)), vjust = -0.5)+geom_text(label = signif(resources_Npmids2[3,],3), vjust = 1.3)
# enrichment of resources in imex-curated publications
# all gene-assiciated pmids
total_Npmids = length(pubmedIDs)
imex_Npmids = length(pubcomp_table_final[imex == 1,unique(pmid)])
# counting pmids in each of the resources
resources = colnames(pubcomp_table_final)[2:8]
resources_Npmids = sapply(resources, function(x) eval(parse(text=paste0("length(pubcomp_table_final[",x," == 1,unique(pmid)])"))))
# how many pmids overlap with IMEx
resources_Npmids_in_IMEx = sapply(resources, function(x) eval(parse(text=paste0("length(pubcomp_table_final[imex == 1 & ",x," == 1,unique(pmid)])"))))
resources_Npmids2 = rbind(resources_Npmids, resources_Npmids_in_IMEx)
resources_Npmids2 = cbind(resources_Npmids2, gene2pubmed = c(total_Npmids, imex_Npmids))
resources_Npmids2 = rbind(resources_Npmids2, fraction = c(resources_Npmids2[2,]/resources_Npmids2[1,]))
qplot(x = colnames(resources_Npmids2), y =resources_Npmids2[3,], geom = "point", ylab = "fraction of papers in IMEx", xlab = NULL) + scale_y_continuous(breaks = seq(0,1,0.05))+theme(axis.text.x = element_text(angle =-25, vjust = 0.6))+geom_text(label = paste0(signif(resources_Npmids2[1,],3)," /\n",signif(resources_Npmids2[2,],3)), vjust = -0.5)+geom_text(label = signif(resources_Npmids2[3,],3), vjust = 1.3)
qplot(x = colnames(resources_Npmids2), y =resources_Npmids2[3,], geom = "point", ylab = "fraction of papers in IMEx", xlab = NULL) + scale_y_continuous(breaks = seq(0,1.1,0.05))+theme(axis.text.x = element_text(angle =-25, vjust = 0.6))+geom_text(label = paste0(signif(resources_Npmids2[1,],3)," /\n",signif(resources_Npmids2[2,],3)), vjust = -0.5)+geom_text(label = signif(resources_Npmids2[3,],3), vjust = 1.3)
qplot(x = colnames(resources_Npmids2), y =resources_Npmids2[3,], geom = "point", ylab = "fraction of papers in IMEx", xlab = NULL) + scale_y_continuous(breaks = seq(0,1.2,0.05))+theme(axis.text.x = element_text(angle =-25, vjust = 0.6))+geom_text(label = paste0(signif(resources_Npmids2[1,],3)," /\n",signif(resources_Npmids2[2,],3)), vjust = -0.5)+geom_text(label = signif(resources_Npmids2[3,],3), vjust = 1.3)
qplot(x = colnames(resources_Npmids2), y =resources_Npmids2[3,], geom = "point", ylab = "fraction of papers in IMEx", xlab = NULL) + scale_y_continuous(breaks = seq(0,1.2,0.05))+theme(axis.text.x = element_text(angle =-25, vjust = 0.6))+geom_text(label = paste0(signif(resources_Npmids2[1,],3)," /\n",signif(resources_Npmids2[2,],3)), vjust = -0.5)+geom_text(label = signif(resources_Npmids2[3,],3), vjust = 1.4)
qplot(x = colnames(resources_Npmids2), y =resources_Npmids2[3,], geom = "point", ylab = "fraction of papers in IMEx", xlab = NULL) + scale_y_continuous(breaks = seq(0,1.2,0.05))+theme(axis.text.x = element_text(angle =-25, vjust = 0.6))+geom_text(label = paste0(signif(resources_Npmids2[2,],3)," /\n",signif(resources_Npmids2[2,],3)), vjust = -0.5)+geom_text(label = signif(resources_Npmids2[3,],3), vjust = 1.4)
qplot(x = colnames(resources_Npmids2), y =resources_Npmids2[3,], geom = "point", ylab = "fraction of papers in IMEx", xlab = NULL) + scale_y_continuous(breaks = seq(0,1.2,0.05))+theme(axis.text.x = element_text(angle =-25, vjust = 0.6))+geom_text(label = paste0(signif(resources_Npmids2[2,],3)," /\n",signif(resources_Npmids2[1,],3)), vjust = -0.5)+geom_text(label = signif(resources_Npmids2[3,],3), vjust = 1.4)
resources_Npmids2[, imex := NULL]
class()
class(resources_Npmids2)
resources_Npmids2[, colnames(resources_Npmids2) != imex]
resources_Npmids2[, colnames(resources_Npmids2) != "imex"]
resources_Npmids2 = resources_Npmids2[, colnames(resources_Npmids2) != "imex"]
qplot(x = colnames(resources_Npmids2), y =resources_Npmids2[3,], geom = "point", ylab = "fraction of papers in IMEx", xlab = NULL) + scale_y_continuous(breaks = seq(0,1.2,0.05))+theme(axis.text.x = element_text(angle =-25, vjust = 0.6))+geom_text(label = paste0(signif(resources_Npmids2[2,],3)," /\n",signif(resources_Npmids2[1,],3)), vjust = -0.5)+geom_text(label = signif(resources_Npmids2[3,],3), vjust = 1.4)
# enrichment of resources in BioGRID-curated publications
# all gene-assiciated pmids
total_Npmids = length(pubmedIDs)
BioGRID_Npmids = length(pubcomp_table_final[BioGRID == 1,unique(pmid)])
# counting pmids in each of the resources
resources = colnames(pubcomp_table_final)[2:8]
resources_Npmids = sapply(resources, function(x) eval(parse(text=paste0("length(pubcomp_table_final[",x," == 1,unique(pmid)])"))))
# how many pmids overlap with BioGRID
resources_Npmids_in_BioGRID = sapply(resources, function(x) eval(parse(text=paste0("length(pubcomp_table_final[BioGRID == 1 & ",x," == 1,unique(pmid)])"))))
resources_Npmids2 = rbind(resources_Npmids, resources_Npmids_in_BioGRID)
resources_Npmids2 = cbind(resources_Npmids2, gene2pubmed = c(total_Npmids, imex_Npmids))
resources_Npmids2 = rbind(resources_Npmids2, fraction = c(resources_Npmids2[2,]/resources_Npmids2[1,]))
qplot(x = colnames(resources_Npmids2), y =resources_Npmids2[3,], geom = "point", ylab = "fraction of papers in BioGRID", xlab = NULL) + scale_y_continuous(breaks = seq(0,1,0.05))+theme(axis.text.x = element_text(angle =-25, vjust = 0.6))+geom_text(label = paste0(signif(resources_Npmids2[2,],3)," /\n",signif(resources_Npmids2[1,],3)), vjust = -0.5)+geom_text(label = signif(resources_Npmids2[3,],3), vjust = 1.4)
# enrichment of resources in BioGRID-curated publications
# all gene-assiciated pmids
total_Npmids = length(pubmedIDs)
BioGRID_Npmids = length(pubcomp_table_final[BioGRID == 1,unique(pmid)])
# counting pmids in each of the resources
resources = colnames(pubcomp_table_final)[2:8]
resources_Npmids = sapply(resources, function(x) eval(parse(text=paste0("length(pubcomp_table_final[",x," == 1,unique(pmid)])"))))
# how many pmids overlap with BioGRID
resources_Npmids_in_BioGRID = sapply(resources, function(x) eval(parse(text=paste0("length(pubcomp_table_final[BioGRID == 1 & ",x," == 1,unique(pmid)])"))))
resources_Npmids2 = rbind(resources_Npmids, resources_Npmids_in_BioGRID)
resources_Npmids2 = cbind(resources_Npmids2, gene2pubmed = c(total_Npmids, imex_Npmids))
resources_Npmids2 = rbind(resources_Npmids2, fraction = c(resources_Npmids2[2,]/resources_Npmids2[1,]))
qplot(x = colnames(resources_Npmids2), y =resources_Npmids2[3,], geom = "point", ylab = "fraction of papers in BioGRID", xlab = NULL) + scale_y_continuous(breaks = seq(0,1,0.05))+theme(axis.text.x = element_text(angle =-25, vjust = 0.6))+geom_text(label = paste0(signif(resources_Npmids2[2,],3)," /\n",signif(resources_Npmids2[1,],3)), vjust = -0.5)+geom_text(label = signif(resources_Npmids2[3,],3), vjust = 1.4)
# enrichment of resources in BioGRID-curated publications
# all gene-assiciated pmids
total_Npmids = length(pubmedIDs)
BioGRID_Npmids = length(pubcomp_table_final[BioGRID == 1,unique(pmid)])
# counting pmids in each of the resources
resources = colnames(pubcomp_table_final)[2:8]
resources_Npmids = sapply(resources, function(x) eval(parse(text=paste0("length(pubcomp_table_final[",x," == 1,unique(pmid)])"))))
# how many pmids overlap with BioGRID
resources_Npmids_in_BioGRID = sapply(resources, function(x) eval(parse(text=paste0("length(pubcomp_table_final[BioGRID == 1 & ",x," == 1,unique(pmid)])"))))
resources_Npmids2 = rbind(resources_Npmids, resources_Npmids_in_BioGRID)
resources_Npmids2 = cbind(resources_Npmids2, gene2pubmed = c(total_Npmids, BioGRID_Npmids))
resources_Npmids2 = rbind(resources_Npmids2, fraction = c(resources_Npmids2[2,]/resources_Npmids2[1,]))
qplot(x = colnames(resources_Npmids2), y =resources_Npmids2[3,], geom = "point", ylab = "fraction of papers in BioGRID", xlab = NULL) + scale_y_continuous(breaks = seq(0,1,0.05))+theme(axis.text.x = element_text(angle =-25, vjust = 0.6))+geom_text(label = paste0(signif(resources_Npmids2[2,],3)," /\n",signif(resources_Npmids2[1,],3)), vjust = -0.5)+geom_text(label = signif(resources_Npmids2[3,],3), vjust = 1.4)
# enrichment of resources in imex-curated interacting pairs
imex_Npmids = length(comp_table_final[imex == 1,unique(pair_id)])
# counting pmids in each of the resources
resources = colnames(comp_table_final)[2:12]
resources_Npmids = sapply(resources, function(x) eval(parse(text=paste0("length(comp_table_final[",x," == 1,unique(pair_id)])"))))
# how many pmids overlap with IMEx
resources_Npmids_in_IMEx = sapply(resources, function(x) eval(parse(text=paste0("length(comp_table_final[imex == 1 & ",x," == 1,unique(pair_id)])"))))
resources_Npmids2 = rbind(resources_Npmids, resources_Npmids_in_IMEx)
resources_Npmids2 = rbind(resources_Npmids2, fraction = c(resources_Npmids2[2,]/resources_Npmids2[1,]))
qplot(x = colnames(resources_Npmids2), y =resources_Npmids2[3,], geom = "point", ylab = "fraction of interacting pairs in IMEx", xlab = NULL) + scale_y_continuous(breaks = seq(0,1,0.05))+theme(axis.text.x = element_text(angle =-25, vjust = 0.6))+geom_text(label = paste0(signif(resources_Npmids2[2,],3)," /\n",signif(resources_Npmids2[1,],3)), vjust = -0.5)+geom_text(label = signif(resources_Npmids2[3,],3), vjust = 1.4)
Pathways_1
Pathways_1[reactome == 1 | OmniPath == 1 | STRING_pathway_inference == 1,]
Pathways_1
Pathways_1[reactome == 1 | OmniPath == 1 | STRING_pathway_inference == 1, unique(pair_id)]
textmining_ids = textmining_1[tm_epmc == 1 | EVEX == 1 | STRING_textmining == 1, unique(pair_id)]
Pathways_ids = Pathways_1[reactome == 1 | OmniPath == 1 | STRING_pathway_inference == 1, unique(pair_id)]
textmining_ids = textmining_1[tm_epmc == 1 | EVEX == 1 | STRING_textmining == 1, unique(pair_id)]
Predictions_ids = Predictions_1[iid_pred == 1 | STRING_phylo_predictions == 1, unique(pair_id)]
Interactions_ids = Interactions_1[imex == 1 | BioGRID == 1 | GO_IPI == 1, unique(pair_id)]
Interactions_ids
Interactions_ids = Interactions_1[imex == 1 | BioGRID == 1 | GO_IPI == 1, unique(pair_id)]
Pathways_ids = Pathways_1[reactome == 1 | OmniPath == 1 | STRING_pathway_inference == 1, unique(pair_id)]
textmining_ids = textmining_1[tm_epmc == 1 | EVEX == 1 | STRING_textmining == 1, unique(pair_id)]
Predictions_ids = Predictions_1[iid_pred == 1 | STRING_phylo_predictions == 1, unique(pair_id)]
area1 = length(Interactions_ids)
area2 = length(Pathways_ids)
area3 = length(textmining_ids)
area4 = length(Predictions_ids)
n12 = sum(!is.na(match(Interactions_ids, Pathways_ids)))
n13 = sum(!is.na(match(Interactions_ids, textmining_ids)))
n14 = sum(!is.na(match(Interactions_ids, Predictions_ids)))
n23 = sum(!is.na(match(Pathways_ids, textmining_ids)))
n24 = sum(!is.na(match(Pathways_ids, Predictions_ids)))
n34 = sum(!is.na(match(textmining_ids, Predictions_ids)))
n123 = length(intersect(intersect((Interactions_ids),(Pathways_ids)),(textmining_ids)))
n124 = length(intersect(intersect((Interactions_ids),(Pathways_ids)),(Predictions_ids)))
n134 = length(intersect(intersect((Interactions_ids),(textmining_ids)),(Predictions_ids)))
n234 = length(intersect(intersect((Pathways_ids),(textmining_ids)),(Predictions_ids)))
n1234 = length(intersect(intersect(intersect((Interactions_ids),(Pathways_ids)),(textmining_ids)), (Predictions_ids)))
venn_Interactions_1 = draw.quad.venn(area1, area2, area3, area4, n12, n13, n14, n23, n24,
n34, n123, n124, n134, n234, n1234,
category = c("Interactions",
"Pathways",
"Textmining",
"Predictions"),
lty = rep("blank", 4),
fill = c("blue", "red", "green", "grey"),
alpha = rep(0.5, 4), cat.pos = c(350, 25, 160,45),
cat.dist = c(0.08,0.035, -0.08, 0.08),
cat.cex = c(0.9,0.9, 0.9, 0.9), scaled = TRUE, euler.d = TRUE,  margin = 0.05,
print.mode =  'raw',
cex = 0.8
)
venn_Interactions_1 = draw.quad.venn(area1, area2, area3, area4, n12, n13, n14, n23, n24,
n34, n123, n124, n134, n234, n1234,
category = c("Interactions",
"Pathways",
"Textmining",
"Predictions"),
lty = rep("blank", 4),
fill = c("blue", "red", "green", "grey"),
alpha = rep(0.5, 4), cat.pos = c(350, 25, 160,45),
cat.dist = c(0.08,0.035, -0.08, 0.08),
cat.cex = c(0.9,0.9, 0.9, 0.9), scaled = TRUE, euler.d = TRUE,  margin = 0.05,
print.mode =  'raw',
cex = 0.8
)
qplot(x = c("Interactions","Pathways","Textmining","Predictions"), y = c(area1/area1, n12/area2, n13/area3, n14/area4), geom = "point", ylab = "fraction of interacting pairs in IMEx", xlab = NULL) + scale_y_continuous(breaks = seq(0,1,0.05))+theme(axis.text.x = element_text(angle =-25, vjust = 0.6))+geom_text(label = c(paste0(signif(area1,3)," /\n",signif(area1,3)), paste0(signif(n12,3)," /\n",signif(area2,3)), paste0(signif(n13,3)," /\n",signif(area3,3)), paste0(signif(n14,3)," /\n",signif(area4,3))), vjust = -0.5)+geom_text(label = signif(c(area1/area1, n12/area2, n13/area3, n14/area4),3), vjust = 1.4)
qplot(x = c("Interactions","Pathways","Textmining","Predictions"), y = c(area1/area1, n12/area2, n13/area3, n14/area4), geom = "point", ylab = "fraction of interacting pairs in IMEx", xlab = NULL) + scale_y_continuous(breaks = seq(0,1,0.05))+theme(axis.text.x = element_text(angle =-25, vjust = 0.6))+geom_text(label = c(paste0(signif(area1,3)," /\n",signif(area1,3)), paste0(signif(n12,3)," /\n",signif(area2,3)), paste0(signif(n13,3)," /\n",signif(area3,3)), paste0(signif(n14,3)," /\n",signif(area4,3))), vjust = -0.5)+geom_text(label = signif(c(area1/area1, n12/area2, n13/area3, n14/area4),3), vjust = 1.4)
qplot(x = c("Interactions","Pathways","Textmining","Predictions"), y = c(area1/area1, n12/area2, n13/area3, n14/area4), geom = "point", ylab = "fraction of interacting pairs in IMEx", xlab = NULL) + scale_y_continuous(breaks = seq(0,1,0.05))+theme(axis.text.x = element_text(angle =-25, vjust = 0.6))+geom_text(label = c("", paste0(signif(n12,3)," /\n",signif(area2,3)), paste0(signif(n13,3)," /\n",signif(area3,3)), paste0(signif(n14,3)," /\n",signif(area4,3))), vjust = -0.5)+geom_text(label = signif(c(area1/area1, n12/area2, n13/area3, n14/area4),3), vjust = 1.4)
Predictions_ids
qplot(x = c("Interactions","Pathways","Textmining","Predictions", "Pathways & Textmining", "Pathways & Predictions", "Textmining & Predictions"), y = c(area1/area1, n12/area2, n13/area3, n14/area4, n123/n23, n124/n24, n134/n34), geom = "point", ylab = "fraction of interacting pairs in IMEx", xlab = NULL) + scale_y_continuous(breaks = seq(0,1,0.05))+theme(axis.text.x = element_text(angle =-25, vjust = 0.6))+
geom_text(label = c("",
paste0(signif(n12,3)," /\n",signif(area2,3)),
paste0(signif(n13,3)," /\n",signif(area3,3)),
paste0(signif(n14,3)," /\n",signif(area4,3)),
paste0(signif(n123,3)," /\n",signif(n23,3)),
paste0(signif(n124,3)," /\n",signif(n24,3)),
paste0(signif(n134,3)," /\n",signif(n34,3))), vjust = -0.5)+
geom_text(label = signif(c(area1/area1, n12/area2, n13/area3, n14/area4, n123/n23, n124/n24, n134/n34),3), vjust = 1.4)
qplot(x = c("Interactions","Pathways","Textmining","Predictions", "Pathways & Textmining", "Pathways & Predictions", "Textmining & Predictions", "Pathways & Textmining & Predictions"), y = c(area1/area1, n12/area2, n13/area3, n14/area4, n123/n23, n124/n24, n134/n34, n1234/n234), geom = "point", ylab = "fraction of interacting pairs in IMEx", xlab = NULL) + scale_y_continuous(breaks = seq(0,1,0.1))+theme(axis.text.x = element_text(angle =-25, vjust = 0.6))+
geom_text(label = c("",
paste0(signif(n12,3)," /\n",signif(area2,3)),
paste0(signif(n13,3)," /\n",signif(area3,3)),
paste0(signif(n14,3)," /\n",signif(area4,3)),
paste0(signif(n123,3)," /\n",signif(n23,3)),
paste0(signif(n124,3)," /\n",signif(n24,3)),
paste0(signif(n134,3)," /\n",signif(n34,3)),
paste0(signif(n1234,3)," /\n",signif(n234,3))), vjust = -0.5)+
geom_text(label = signif(c(area1/area1, n12/area2, n13/area3, n14/area4, n123/n23, n124/n24, n134/n34, n1234/n234),3), vjust = 1.4)
# Chunk 1
summary(cars)
# Chunk 2
plot(cars)
install.packages("evaluate")
install.packages("evaluate")
update.packages()
y
?theme
# install packages if some are not already installed
packages = c("plyr","dplyr","data.table","UpSetR", "splitstackshape", "ggplot2", "shiny", "VennDiagram")
if(mean(packages %in% installed.packages()) != 1){
install.packages(packages[!packages %in% installed.packages()])
}
suppressPackageStartupMessages({
library(plyr)
library(dplyr)
library(data.table)
library(UpSetR)
library(splitstackshape)
library(ggplot2)
library(shiny)
library(VennDiagram)
})
?theme
rmarkdown::shiny_prerendered_clean('dsp_comparison_groups_enrichment_pres2.Rpres')
2x = mean(c(x,y))
2*x = mean(c(x,y))
x == (x+y)/4
2 == (2+2*3)/4
reactome_pairs_pmids
setwd("../reactome_interactions/results/")
system("gunzip -k pairs_pmid_reactome.txt.gz")
reactome_pairs_pmids <- fread("pairs_pmid_reactome.txt",header=T,sep="\t",colClasses=c("character","character","numeric"),data.table = T)
system("rm pairs_pmid_reactome.txt")
setwd("../../dsp_comparison/")
reactome_pairs <- unique(select(reactome_pairs_pmids,pair_id,reactome))
reactome_pmids <- unique(select(reactome_pairs_pmids,pmid,reactome))
# install packages if some are not already installed
packages = c("plyr","dplyr","data.table","UpSetR", "splitstackshape", "ggplot2", "shiny", "VennDiagram")
if(mean(packages %in% installed.packages()) != 1){
install.packages(packages[!packages %in% installed.packages()])
}
suppressPackageStartupMessages({
library(plyr)
library(dplyr)
library(data.table)
library(UpSetR)
library(splitstackshape)
library(ggplot2)
library(shiny)
library(VennDiagram)
})
setwd("../reactome_interactions/results/")
system("gunzip -k pairs_pmid_reactome.txt.gz")
reactome_pairs_pmids <- fread("pairs_pmid_reactome.txt",header=T,sep="\t",colClasses=c("character","character","numeric"),data.table = T)
system("rm pairs_pmid_reactome.txt")
setwd("../../dsp_comparison/")
reactome_pairs <- unique(select(reactome_pairs_pmids,pair_id,reactome))
reactome_pmids <- unique(select(reactome_pairs_pmids,pmid,reactome))
reactome_pairs_pmids
rm(list = ls())
